openapi: 3.0.3

info:
  version: 3.2.0
  title: Bee API
  description: "A list of the currently provided Interfaces to interact with the swarm, implementing file operations and sending messages"

security:
  - { }

externalDocs:
  description: Browse the documentation @ the Swarm Docs
  url: "https://docs.ethswarm.org"

servers:
  - url: "http://{apiRoot}:{port}/v1"
    variables:
      apiRoot:
        default: "localhost"
        description: Base address of the local bee node main API
      port:
        default: "1633"
        description: Service port provided in bee node config
  - url: "http://{apiRoot}:{port}"
    variables:
      apiRoot:
        default: "localhost"
        description: Base address of the local bee node main API
      port:
        default: "1633"
        description: Service port provided in bee node config

paths:
  "/auth":
    post:
      summary: "Authenticate - This endpoint is experimental"
      tags:
        - Auth
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "SwarmCommon.yaml#/components/schemas/SecurityTokenRequest"
      responses:
        "201":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/SecurityTokenResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "401":
          $ref: "SwarmCommon.yaml#/components/responses/401"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/refresh":
    post:
      summary: "Refresh the auth token - This endpoint is experimental"
      tags:
        - Auth
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "SwarmCommon.yaml#/components/schemas/SecurityTokenRequest"
      responses:
        "201":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/SecurityTokenResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "401":
          $ref: "SwarmCommon.yaml#/components/responses/401"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/bytes":
    post:
      summary: "Upload data"
      tags:
        - Bytes
      parameters:
        - in: header
          schema:
            $ref: "SwarmCommon.yaml#/components/parameters/SwarmPostageBatchId"
          name: swarm-postage-batch-id
          required: true
        - in: header
          schema:
            $ref: "SwarmCommon.yaml#/components/parameters/SwarmTagParameter"
          name: swarm-tag
          required: false
        - in: header
          schema:
            $ref: "SwarmCommon.yaml#/components/parameters/SwarmPinParameter"
          name: swarm-pin
          required: false
        - in: header
          schema:
            $ref: "SwarmCommon.yaml#/components/parameters/SwarmDeferredUpload"
          name: swarm-deferred-upload
          required: false
        - in: header
          schema:
            $ref: "SwarmCommon.yaml#/components/parameters/SwarmEncryptParameter"
          name: swarm-encrypt
          required: false

      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: Ok
          headers:
            "swarm-tag":
              $ref: "SwarmCommon.yaml#/components/headers/SwarmTag"
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ReferenceResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "402":
          $ref: "SwarmCommon.yaml#/components/responses/402"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/bytes/{reference}":
    get:
      summary: "Get referenced data"
      tags:
        - Bytes
      parameters:
        - in: path
          name: reference
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmReference"
          required: true
          description: Swarm address reference to content
      responses:
        "200":
          description: Retrieved content specified by reference
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        default:
          description: Default response

  "/chunks":
    post:
      summary: "Upload Chunk"
      tags:
        - Chunk
      parameters:
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmTagParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPinParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPostageBatchId"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmDeferredUpload"
      requestBody:
        description: Chunk binary data that has to have at least 8 bytes.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: Ok
          headers:
            "swarm-tag":
              description: Tag UID if it was passed to the request `swarm-tag` header.
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Uid"
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Status"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "402":
          $ref: "SwarmCommon.yaml#/components/responses/402"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/chunks/stream":
    get:
      summary: "Upload stream of chunks"
      tags:
        - Chunk
      parameters:
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmTagParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPinParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPostageBatchId"
      responses:
        "200":
          description: "Returns a Websocket connection on which stream of chunks can be uploaded. Each chunk sent is acknowledged using a binary response `0` which serves as confirmation of upload of single chunk. Chunks should be packaged as binary messages for uploading."
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        default:
          description: Default response
  "/bzz":
    post:
      summary: "Upload file or a collection of files"
      description: "In order to upload a collection, user can send a multipart request with all the files populated in the form data with appropriate headers.\n\n
        User can also upload a tar file along with the swarm-collection header. This will upload the tar file after extracting the entire directory structure.\n\n
        If the swarm-collection header is absent, all requests (including tar files) are considered as single file uploads.\n\n
        A multipart request is treated as a collection regardless of whether the swarm-collection header is present. This means in order to serve single files
        uploaded as a multipart request, the swarm-index-document header should be used with the name of the file."
      tags:
        - BZZ
      parameters:
        - in: query
          name: name
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/FileName"
          required: false
          description: Filename when uploading single file
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmTagParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPinParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmEncryptParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/ContentTypePreserved"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmCollection"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmIndexDocumentParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmErrorDocumentParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPostageBatchId"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmDeferredUpload"
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: array
                  items:
                    type: string
                    format: binary
          application/octet-stream:
            schema:
              type: string
              format: binary
          application/x-tar:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: Ok
          headers:
            "swarm-tag":
              $ref: "SwarmCommon.yaml#/components/headers/SwarmTag"
            "etag":
              $ref: "SwarmCommon.yaml#/components/headers/ETag"
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ReferenceResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "402":
          $ref: "SwarmCommon.yaml#/components/responses/402"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/bzz/{reference}":
    get:
      summary: "Get file or index document from a collection of files"
      tags:
        - BZZ
      parameters:
        - in: path
          name: reference
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmReference"
          required: true
          description: Swarm address of content
      responses:
        "200":
          description: Ok
          # "swarm-feed-index":
          #   $ref: "SwarmCommon.yaml#/components/headers/SwarmFeedIndex"
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/bzz/{reference}/{path}":
    get:
      summary: "Get referenced file from a collection of files"
      tags:
        - BZZ
      parameters:
        - in: path
          name: reference
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmReference"
          required: true
          description: Swarm address of content
        - in: path
          name: path
          schema:
            type: string
          required: true
          description: Path to the file in the collection.
      responses:
        "200":
          description: Ok
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/tags":
    get:
      summary: Get list of tags
      tags:
        - Tag
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          required: false
          description: The numbers of items to return.
      responses:
        "200":
          description: List of tags
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/TagsList"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    post:
      summary: "Create Tag"
      tags:
        - Tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "SwarmCommon.yaml#/components/schemas/NewTagRequest"
      responses:
        "201":
          description: New Tag Info
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/NewTagResponse"

        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/tags/{uid}":
    get:
      summary: "Get Tag information using Uid"
      tags:
        - Tag
      parameters:
        - in: path
          name: uid
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/Uid"
          required: true
          description: Uid
      responses:
        "200":
          description: Tag info
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/NewTagResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    delete:
      summary: "Delete Tag information using Uid"
      tags:
        - Tag
      parameters:
        - in: path
          name: uid
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/Uid"
          required: true
          description: Uid
      responses:
        "204":
          $ref: "SwarmCommon.yaml#/components/responses/204"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    patch:
      summary: "Update Total Count and swarm hash for a tag of an input stream of unknown size using Uid"
      tags:
        - Tag
      parameters:
        - in: path
          name: uid
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/Uid"
          required: true
          description: Uid
      requestBody:
        description: Can contain swarm hash to use for the tag
        required: false
        content:
          application/json:
            schema:
              $ref: "SwarmCommon.yaml#/components/schemas/Address"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Status"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/pins/{reference}":
    parameters:
      - in: path
        name: reference
        schema:
          $ref: "SwarmCommon.yaml#/components/schemas/SwarmOnlyReference"
        required: true
        description: Swarm reference of the root hash
    post:
      summary: Pin the root hash with the given reference
      tags:
        - Pinning
      responses:
        "200":
          description: Pin already exists, so no operation
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Response"
        "201":
          description: New pin with root reference was created
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Response"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    delete:
      summary: Unpin the root hash with the given reference
      tags:
        - Pinning
      responses:
        "200":
          description: Unpinning root hash with reference
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Response"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    get:
      summary: Get pinning status of the root hash with the given reference
      tags:
        - Pinning
      responses:
        "200":
          description: Reference of the pinned root hash
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/SwarmOnlyReference"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/pins":
    get:
      summary: Get the list of pinned root hash references
      tags:
        - Pinning
      responses:
        "200":
          description: List of pinned root hash references
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/SwarmOnlyReferencesList"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/pss/send/{topic}/{targets}":
    post:
      summary: Send to recipient or target with Postal Service for Swarm
      tags:
        - Postal Service for Swarm
      parameters:
        - in: path
          name: topic
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/PssTopic"
          required: true
          description: Topic name
        - in: path
          name: targets
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/PssTargets"
          required: true
          description: Target message address prefix. If multiple targets are specified, only one would be matched.
        - in: query
          name: recipient
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/PssRecipient"
          required: false
          description: Recipient publickey
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPostageBatchId"
      responses:
        "201":
          description: Subscribed to topic
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "402":
          $ref: "SwarmCommon.yaml#/components/responses/402"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/pss/subscribe/{topic}":
    get:
      summary: Subscribe for messages on the given topic.
      tags:
        - Postal Service for Swarm
      parameters:
        - in: path
          name: topic
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/PssTopic"
          required: true
          description: Topic name
      responses:
        "200":
          description: Returns a WebSocket with a subscription for incoming message data on the requested topic.
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/soc/{owner}/{id}":
    post:
      summary: Upload single owner chunk
      tags:
        - Single owner chunk
      parameters:
        - in: path
          name: owner
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/EthereumAddress"
          required: true
          description: Owner
        - in: path
          name: id
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/HexString"
          required: true
          description: Id
        - in: query
          name: sig
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/HexString"
          required: true
          description: Signature
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPinParameter"
        - in: header
          schema:
            $ref: "SwarmCommon.yaml#/components/parameters/SwarmPostageBatchId"
          name: swarm-postage-batch-id
          required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ReferenceResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "401":
          $ref: "SwarmCommon.yaml#/components/responses/401"
        "402":
          $ref: "SwarmCommon.yaml#/components/responses/402"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/feeds/{owner}/{topic}":
    post:
      summary: Create an initial feed root manifest
      tags:
        - Feed
      parameters:
        - in: path
          name: owner
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/EthereumAddress"
          required: true
          description: Owner
        - in: path
          name: topic
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/HexString"
          required: true
          description: Topic
        - in: query
          name: type
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/FeedType"
          required: false
          description: "Feed indexing scheme (default: sequence)"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPinParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/SwarmPostageBatchId"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ReferenceResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "401":
          $ref: "SwarmCommon.yaml#/components/responses/401"
        "402":
          $ref: "SwarmCommon.yaml#/components/responses/402"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    get:
      summary: Find feed update
      tags:
        - Feed
      parameters:
        - in: path
          name: owner
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/EthereumAddress"
          required: true
          description: Owner
        - in: path
          name: topic
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/HexString"
          required: true
          description: Topic
        - in: query
          name: at
          schema:
            type: integer
          required: false
          description: "Timestamp of the update (default: now)"
        - in: query
          name: type
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/FeedType"
          required: false
          description: "Feed indexing scheme (default: sequence)"
      responses:
        "200":
          description: Latest feed update
          headers:
            "swarm-feed-index":
              $ref: "SwarmCommon.yaml#/components/headers/SwarmFeedIndex"
            "swarm-feed-index-next":
              $ref: "SwarmCommon.yaml#/components/headers/SwarmFeedIndexNext"
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ReferenceResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "401":
          $ref: "SwarmCommon.yaml#/components/responses/401"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/stewardship/{reference}":
    get:
      summary: "Check if content is available"
      tags:
        - Stewardship
      parameters:
        - in: path
          name: reference
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmReference"
          required: true
          description: "Root hash of content (can be of any type: collection, file, chunk)"
      responses:
        "200":
          description: Returns if the content is retrievable
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/IsRetrievableResponse"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    put:
      summary: "Reupload a root hash to the network"
      tags:
        - Stewardship
      parameters:
        - in: path
          name: reference
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmReference"
          required: true
          description: "Root hash of content (can be of any type: collection, file, chunk)"
      responses:
        "200":
          description: Ok
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/addresses":
    get:
      summary: Get overlay and underlay addresses of the node
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag.
      tags:
        - Connectivity
      responses:
        "200":
          description: Own node underlay and overlay addresses
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Addresses"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/health":
    get:
      summary: Get node overall health Status
      description: |
        Health Status will indicate node healthiness.

        If node is unhealthy please check node logs for errors.
      tags:
        - Status
      responses:
        "200":
          description: Health Status of node
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Status"
        default:
          description: Default response

  "/readiness":
    get:
      summary: Readiness endpoint indicates if node is ready to start accepting traffic
      tags:
        - Status
      responses:
        "200":
          description: Indicates that node is ready
          $ref: "SwarmCommon.yaml#/components/responses/200"
        "400":
          description: Indicates that node is not ready
          $ref: "SwarmCommon.yaml#/components/responses/400"
        default:
          description: Default response

  "/balances":
    get:
      summary: Get the balances with all known peers including prepaid services
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Balance
      responses:
        "200":
          description: Own balances with all known peers
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Balances"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/balances/{address}":
    get:
      summary: Get the balances with a specific peer including prepaid services
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Balance
      parameters:
        - in: path
          name: address
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Balance with the specific peer
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Balance"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/blocklist":
    get:
      summary: Get a list of blocklisted peers
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Connectivity
      responses:
        "200":
          description: Returns overlay addresses of blocklisted peers
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Peers"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/consumed":
    get:
      summary: Get the past due consumption balances with all known peers
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Balance
      responses:
        "200":
          description: Own past due consumption balances with all known peers
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Balances"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/consumed/{address}":
    get:
      summary: Get the past due consumption balance with a specific peer
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Balance
      parameters:
        - in: path
          name: address
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Past-due consumption balance with the specific peer
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Balance"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/address":
    get:
      summary: Get the address of the chequebook contract used
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Chequebook
      responses:
        "200":
          description: Ethereum address of chequebook contract
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ChequebookAddress"

  "/chequebook/balance":
    get:
      summary: Get the balance of the chequebook
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Chequebook
      responses:
        "200":
          description: Balance of the chequebook
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ChequebookBalance"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/chunks/{address}":
    get:
      summary: "Get Chunk"
      tags:
        - Chunk
      parameters:
        - in: path
          name: reference
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmReference"
          required: true
          description: Swarm address of chunk
      responses:
        "200":
          description: Retrieved chunk content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    head:
      summary: Check if chunk at address exists locally
      tags:
        - Chunk
      parameters:
        - in: path
          name: address
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of chunk
      responses:
        "200":
          description: Chunk exists
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Response"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        default:
          description: Default response
    delete:
      summary: Delete a chunk from local storage
      tags:
        - Chunk
      parameters:
        - in: path
          name: address
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of chunk
      responses:
        "200":
          description: Chunk exists
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Response"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        default:
          description: Default response

  "/connect/{multiAddress}":
    post:
      summary: Connect to address
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Connectivity
      parameters:
        - in: path
          allowReserved: true
          name: multiAddress
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/MultiAddress"
          required: true
          description: Underlay address of peer
      responses:
        "200":
          description: Returns overlay address of connected peer
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Address"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/reservestate":
    get:
      summary: Get reserve state
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Status
      responses:
        "200":
          description: Reserve State
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ReserveState"
        default:
          description: Default response

  "/chainstate":
    get:
      summary: Get chain state
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Status
      responses:
        "200":
          description: Chain State
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ChainState"
        default:
          description: Default response

  "/node":
    get:
      summary: Get information about the node
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag.
      tags:
        - Status
      responses:
        "200":
          description: Information about the node
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Node"
        default:
          description: Default response

  "/peers":
    get:
      summary: Get a list of peers
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Connectivity
      responses:
        "200":
          description: Returns overlay addresses of connected peers
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Peers"
        default:
          description: Default response

  "/peers/{address}":
    delete:
      summary: Remove peer
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Connectivity
      parameters:
        - in: path
          name: address
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Disconnected peer
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Response"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/pingpong/{peer-id}":
    post:
      summary: Try connection to node
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Connectivity
      parameters:
        - in: path
          name: peer-id
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Returns round trip time for given peer
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/RttMs"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/settlements/{address}":
    get:
      summary: Get amount of sent and received from settlements with a peer
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Settlements
      parameters:
        - in: path
          name: address
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Amount of sent or received from settlements with a peer
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Settlement"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/settlements":
    get:
      summary: Get settlements with all known peers and total amount sent or received
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Settlements
      responses:
        "200":
          description: Settlements with all known peers and total amount sent or received
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Settlements"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/timesettlements":
    get:
      summary: Get time based settlements with all known peers and total amount sent or received
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Settlements
      responses:
        "200":
          description: Time based settlements with all known peers and total amount sent or received
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Settlements"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/topology":
    get:
      summary: Get topology of known network
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Connectivity
      responses:
        "200":
          description: Swarm topology of the bee node
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/BzzTopology"

  "/welcome-message":
    get:
      summary: Get configured P2P welcome message
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Connectivity
      responses:
        "200":
          description: Welcome message
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/WelcomeMessage"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    post:
      summary: Set P2P welcome message
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Connectivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "SwarmCommon.yaml#/components/schemas/WelcomeMessage"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/Status"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/cashout/{peer-id}":
    get:
      summary: Get last cashout action for the peer
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: peer-id
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of peer
      tags:
        - Chequebook
      responses:
        "200":
          description: Cashout status
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/SwapCashoutStatus"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    post:
      summary: Cashout the last cheque for the peer
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: peer-id
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of peer
        - $ref: "SwarmCommon.yaml#/components/parameters/GasPriceParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/GasLimitParameter"
      tags:
        - Chequebook
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/TransactionResponse"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "429":
          $ref: "SwarmCommon.yaml#/components/responses/429"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/cheque/{peer-id}":
    get:
      summary: Get last cheques for the peer
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: peer-id
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/SwarmAddress"
          required: true
          description: Swarm address of peer
      tags:
        - Chequebook
      responses:
        "200":
          description: Last cheques
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ChequePeerResponse"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/cheque":
    get:
      summary: Get last cheques for all peers
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Chequebook
      responses:
        "200":
          description: Last cheques
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/ChequeAllPeersResponse"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/deposit":
    post:
      summary: Deposit tokens from overlay address into chequebook
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      parameters:
        - in: query
          name: amount
          schema:
            type: integer
          required: true
          description: amount of tokens to deposit
        - $ref: "SwarmCommon.yaml#/components/parameters/GasPriceParameter"
      tags:
        - Chequebook
      responses:
        "201":
          description: Transaction hash of the deposit transaction
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/TransactionResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/chequebook/withdraw":
    post:
      summary: Withdraw tokens from the chequebook to the overlay address
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      parameters:
        - in: query
          name: amount
          schema:
            type: integer
          required: true
          description: amount of tokens to withdraw
        - $ref: "SwarmCommon.yaml#/components/parameters/GasPriceParameter"
      tags:
        - Chequebook
      responses:
        "201":
          description: Transaction hash of the withdraw transaction
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/TransactionResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/transactions":
    get:
      summary: Get list of pending transactions
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag.
      tags:
        - Transaction
      responses:
        "200":
          description: List of pending transactions
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/PendingTransactionsResponse"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/transactions/{txHash}":
    get:
      summary: Get information about a sent transaction
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag.
      parameters:
        - in: path
          name: txHash
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/TransactionHash"
          required: true
          description: Hash of the transaction
      tags:
        - Transaction
      responses:
        "200":
          description: Get info about transaction
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/TransactionInfo"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    post:
      summary: Rebroadcast existing transaction
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag.
      parameters:
        - in: path
          name: txHash
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/TransactionHash"
          required: true
          description: Hash of the transaction
      tags:
        - Transaction
      responses:
        "200":
          description: Hash of the transaction
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/TransactionResponse"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response
    delete:
      summary: Cancel existing transaction
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag.
      parameters:
        - in: path
          name: txHash
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/TransactionHash"
          required: true
          description: Hash of the transaction
        - $ref: "SwarmCommon.yaml#/components/parameters/GasPriceParameter"
      tags:
        - Transaction
      responses:
        "200":
          description: Hash of the transaction
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/TransactionResponse"
        "404":
          $ref: "SwarmCommon.yaml#/components/responses/404"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/stamps":
    parameters:
      - in: query
        name: all
        schema:
          $ref: "SwarmCommon.yaml#/components/schemas/isAll"
        description: Gets all stamps. Default is null.
    get:
      summary: Get stamps for this node
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Postage Stamps
      responses:
        "200":
          description: Returns an array of postage batches.
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/DebugPostageBatchesResponse"

        default:
          description: Default response

  "/stamps/{id}":
    parameters:
      - in: path
        name: id
        schema:
          $ref: "SwarmCommon.yaml#/components/schemas/BatchID"
        required: true
        description: Swarm address of the stamp
    get:
      summary: Get an individual postage batch status
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Postage Stamps
      responses:
        "200":
          description: Returns an individual postage batch state
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/DebugPostageBatch"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        default:
          description: Default response

  "/stamps/{id}/buckets":
    parameters:
      - in: path
        name: id
        schema:
          $ref: "SwarmCommon.yaml#/components/schemas/BatchID"
        required: true
        description: Swarm address of the stamp
    get:
      summary: Get extended bucket data of a batch
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Postage Stamps
      responses:
        "200":
          description: Returns extended bucket data of the provided batch ID
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/PostageStampBuckets"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        default:
          description: Default response

  "/stamps/{amount}/{depth}":
    post:
      summary: Buy a new postage batch.
      security:
        - bearerAuth: [ ]
      description: |
        Be aware, this endpoint creates an on-chain transactions and transfers BZZ from the node's Ethereum account and hence directly manipulates the wallet balance!

        This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      tags:
        - Postage Stamps
      parameters:
        - in: path
          name: amount
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/BigInt"
          required: true
          description: Amount of BZZ added that the postage batch will have.
        - in: path
          name: depth
          schema:
            type: integer
          required: true
          description: Batch depth which specifies how many chunks can be signed with the batch. It is a logarithm. Must be higher than default bucket depth (16)
        - in: query
          name: label
          schema:
            type: string
          required: false
          description: An optional label for this batch
        - in: header
          name: immutable
          schema:
            type: boolean
          required: false
        - $ref: "SwarmCommon.yaml#/components/parameters/GasPriceParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/GasLimitParameter"
      responses:
        "201":
          description: Returns the newly created postage batch ID
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/BatchIDResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "429":
          $ref: "SwarmCommon.yaml#/components/responses/429"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/stamps/topup/{id}/{amount}":
    patch:
      summary: Top up an existing postage batch.
      description: |
        Be aware, this endpoint creates on-chain transactions and transfers BZZ from the node's Ethereum account and hence directly manipulates the wallet balance!

        This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      tags:
        - Postage Stamps
      parameters:
        - in: path
          name: id
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/BatchID"
          required: true
          description: Batch ID to top up
        - in: path
          name: amount
          schema:
            type: integer
          required: true
          description: Amount of BZZ per chunk to top up to an existing postage batch.
        - $ref: "SwarmCommon.yaml#/components/parameters/GasPriceParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/GasLimitParameter"
      responses:
        "202":
          description: Returns the postage batch ID that was topped up
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/BatchIDResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "429":
          $ref: "SwarmCommon.yaml#/components/responses/429"
        "402":
          $ref: "SwarmCommon.yaml#/components/responses/402"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/stamps/dilute/{id}/{depth}":
    patch:
      summary: Dilute an existing postage batch.
      description: |
        Be aware, this endpoint creates on-chain transactions and transfers BZZ from the node's Ethereum account and hence directly manipulates the wallet balance!

        This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      tags:
        - Postage Stamps
      parameters:
        - in: path
          name: id
          schema:
            $ref: "SwarmCommon.yaml#/components/schemas/BatchID"
          required: true
          description: Batch ID to dilute
        - in: path
          name: depth
          schema:
            type: integer
          required: true
          description: New batch depth. Must be higher than the previous depth.
        - $ref: "SwarmCommon.yaml#/components/parameters/GasPriceParameter"
        - $ref: "SwarmCommon.yaml#/components/parameters/GasLimitParameter"
      responses:
        "202":
          description: Returns the postage batch ID that was diluted.
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/BatchIDResponse"
        "400":
          $ref: "SwarmCommon.yaml#/components/responses/400"
        "429":
          $ref: "SwarmCommon.yaml#/components/responses/429"
        "500":
          $ref: "SwarmCommon.yaml#/components/responses/500"
        default:
          description: Default response

  "/batches":
    get:
      summary: Get all globally available batches that were purchased by all nodes.
      description: This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.
      security:
        - bearerAuth: [ ]
      tags:
        - Postage Stamps
      responses:
        "200":
          description: Returns an array of all available and currently valid postage batches.
          content:
            application/json:
              schema:
                $ref: "SwarmCommon.yaml#/components/schemas/DebugPostageAllBatchesResponse"

        default:
          description: Default response

  "/stake/deposit/{amount}":
        post:
          summary: Deposit some amount for staking.
          description: Be aware, this endpoint creates an on-chain transactions and transfers BZZ from the node's Ethereum account and hence directly manipulates the wallet balance.
          tags:
            - Staking
          parameters:
            - in: path
              name: amount
              schema:
                type: string
              description: Amount of BZZ added that will be deposited for staking.
            - $ref: "SwarmCommon.yaml#/components/parameters/GasPriceParameter"
            - $ref: "SwarmCommon.yaml#/components/parameters/GasLimitParameter"
          responses:
            "200":
              description: Amount successfully staked
            "400":
              $ref: "SwarmCommon.yaml#/components/responses/400"
            "500":
              $ref: "SwarmCommon.yaml#/components/responses/500"
            default:
              description: Default response

  "/stake":
          get:
            summary: Get the staked amount.
            description: This endpoint fetches the staked amount from the blockchain.
            tags:
              - Staking
            responses:
              "200":
                $ref: "SwarmCommon.yaml#/components/schemas/GetStakeResponse"
              "500":
                $ref: "SwarmCommon.yaml#/components/responses/500"
              default:
                description: Default response

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: SecurityToken
