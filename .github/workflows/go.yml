name: Go

on:
  push:
    paths-ignore:
      - packaging/**
    branches:
      - 'master'
  pull_request:
    paths-ignore:
      - packaging/**
    branches:
      - '**'

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        cache: true
        go-version-file: go.mod
    - name: Set git to use LF
      # make sure that line endings are not converted on windows
      # as gofmt linter will report that they need to be changed
      run: git config --global core.autocrlf false
    - name: Commit linting
      if: matrix.os == 'ubuntu-latest' && github.ref != 'refs/heads/master'
      uses: wagoid/commitlint-github-action@v5
    - name: Build
      run: make build
    - name: Test with race detector (Ubuntu and MacOS)
      if: matrix.os != 'windows-latest'
      run: make test-race
    - name: Test without race detector (Windows)
      if: matrix.os == 'windows-latest'
      run: make test
  golangci-lint:
    name: GolangCI-Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        cache: false
        go-version-file: go.mod
    - name: GolangCI-Lint
      uses: golangci/golangci-lint-action@v3
      with:
        skip-cache: false
        version: v1.49
  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        cache: true
        go-version-file: go.mod
    - name: Test whitespaces and code coverage
      run: |
        make check-whitespace
        make cover=1 test
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        files: ./cover.out
  trigger-beekeeper:
    name: Trigger Beekeeper
    runs-on: ubuntu-latest
    needs: [build, golangci-lint, coverage]
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        cache: false
        go-version-file: go.mod
    - name: Trigger Beekeeper
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GHA_PAT_BASIC }}
        repository: ${{ github.repository }}
        event-type: trigger-beekeeper
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
